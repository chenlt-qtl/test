<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ikoko.top.word.dao.WordMapper" >
  <resultMap id="BaseResultMap" type="com.ikoko.top.word.entity.Word" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="word_name" property="wordName" jdbcType="VARCHAR" />
    <result column="ph_am" property="phAm" jdbcType="VARCHAR" />
    <result column="ph_am_mp3" property="phAmMp3" jdbcType="VARCHAR" />
    <result column="exchange" property="exchange" jdbcType="VARCHAR" />
    <result column="parts" property="parts" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, word_name, ph_am, ph_am_mp3, exchange, parts
  </sql>
  
  <select id="get" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from w_word
    where id = #{id}
  </select>
  
  <select id="selectByParam" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from w_word
    <where>
        <if test="wordName!=null and wordName!=''">
            word_name = #{wordName}
        </if>
    </where>
  </select>
  
  <select id="selectWords" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from w_word
    <where>
        <if test="wordIds!=null and wordIds!=''">
            id in  
            <foreach item="wordId" index="index" collection="wordIds" open="(" separator="," close=")">  
                #{wordId}
            </foreach>
        </if>
    </where>
  </select>
  
  <select id="selectByArticleId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from w_word a where exists (select 1 from w_sentence_word_rel b where a.id = b.word_id and 
        exists (select 1 from w_sentence c where c.id = b.sentence_id and c.article_id = #{articleId,jdbcType=VARCHAR}))
    <if test="start!=null and limit !=null">
             LIMIT #{start},#{limit}
    </if>
  </select>
  
  <delete id="delete" parameterType="java.lang.Long" >
    delete from word
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.ikoko.top.word.entity.Word" useGeneratedKeys="true" keyProperty="id">
    insert into w_word (id, word_name, ph_am, 
      exchange, parts, ph_am_mp3
      )
    values (#{id,jdbcType=BIGINT}, #{wordName,jdbcType=VARCHAR}, #{phAm,jdbcType=VARCHAR}, 
      #{exchange,jdbcType=VARCHAR}, #{parts,jdbcType=VARCHAR}, #{phAmMp3,jdbcType=LONGVARBINARY}
      )
  </insert>
  
  <update id="update" parameterType="com.ikoko.top.word.entity.Word" >
    update word
    set word_name = #{wordName,jdbcType=VARCHAR},
      ph_am = #{phAm,jdbcType=VARCHAR},
      ph_am_mp3 = #{phAmMp3,jdbcType=VARCHAR},
      exchange = #{exchange,jdbcType=VARCHAR},
      parts = #{parts,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>