<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ikoko.top.word.dao.ArticleMapper" >
    <sql id="articleColumnsWithOutMp3">
        a.id, title,a.status,word_num as wordNum ,CASE when mp3 is NULL then 0 else 1 END as hasMp3
    </sql>
    
    <sql id="articleColumns">
        id ,title,mp3,status,word_num
    </sql>
    
    <select id="count" resultType="int">
        SELECT count(1) FROM w_article a
        <where>
            a.status = '0' 
            <if test="page.entity.user != null and page.entity.user.id != null and page.entity.user.id != ''">
	            and exists (select 1 from w_article_user_rel b where a.id = b.article_id and b.status = '0' and b.user_id = #{page.entity.user.id})
	        </if>
	        <if test="page.entity.title != null and page.entity.title != ''">
                and a.title = #{page.entity.title}
            </if>
        </where>
    </select>

    <select id="selectByIdWithoutMp3" resultType="com.ikoko.top.word.entity.Article">
        SELECT <include refid="articleColumnsWithOutMp3"/> FROM w_article a 
        <where>
            status = '0' and id = #{id}
        </where>
    </select>
    <select id="findPage" resultType="com.ikoko.top.word.entity.Article">
        SELECT <include refid="articleColumnsWithOutMp3"/> FROM w_article a 
        <where>
            a.status = '0' 
            <if test="page.entity.user != null and page.entity.user.id != null and page.entity.user.id != ''">
                and exists (select 1 from w_article_user_rel b where a.id = b.article_id and b.status = '0' and b.user_id = #{page.entity.user.id})
            </if>
            <if test="page.entity.title != null and page.entity.title != ''">
                and a.title = #{page.entity.title}
            </if>
        </where>
        <if test="page.orderBy!=''">
             ORDER BY ${page.orderBy} LIMIT ${page.pageNo*page.pageSize},${page.pageSize}
        </if>
    </select>
    
        <select id="countOther" resultType="int">
        SELECT count(1) FROM w_article a
        <where>
            a.status = '0' 
            <if test="page.entity.user != null and page.entity.user.id != null and page.entity.user.id != ''">
                and not exists (select 1 from w_article_user_rel b where a.id = b.article_id and b.status = '0' and b.user_id = #{page.entity.user.id})
            </if>
            <if test="page.entity.title != null and page.entity.title != ''">
                and a.title = #{page.entity.title}
            </if>
        </where>
    </select>

    <select id="findOtherPage" resultType="com.ikoko.top.word.entity.Article">
        SELECT <include refid="articleColumnsWithOutMp3"/> FROM w_article a 
        <where>
            a.status = '0' 
            <if test="page.entity.user != null and page.entity.user.id != null and page.entity.user.id != ''">
                and not exists (select 1 from w_article_user_rel b where a.id = b.article_id and b.status = '0' and b.user_id = #{page.entity.user.id})
            </if>
            <if test="page.entity.title != null and page.entity.title != ''">
                and a.title = #{page.entity.title}
            </if>
        </where>
        <if test="page.orderBy!=''">
             ORDER BY ${page.orderBy} LIMIT ${page.pageNo*page.pageSize},${page.pageSize}
        </if>
    </select>
    
    <select id="get" resultType="com.ikoko.top.word.entity.Article">
        SELECT 
            <include refid="articleColumns"/>
        FROM w_article WHERE status='0' and id = #{id}
    </select>

	<insert id="insert" parameterType="com.ikoko.top.word.entity.Article" useGeneratedKeys="true" keyProperty="id">
		insert into w_article (
		<include refid="articleColumns" />
		)
		values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR},
		#{mp3,jdbcType=LONGVARBINARY},#{status,jdbcType=TINYINT},#{wordNum,jdbcType=INTEGER})
	</insert>
	
	<update id="update">
        update w_article
            set title = #{title,jdbcType=VARCHAR},
            status = #{status,jdbcType=BIT},
            word_num = #{wordNum,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    
    <delete id="delete">
        update w_article set status='1' where id=#{id}
    </delete>
</mapper>